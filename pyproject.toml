[metadata]
description-file = "README.md"

[build-system]
# virtualenv 20.0.34 partly breaks pre-commit under conda
# https://github.com/ContinuumIO/anaconda-issues/issues/12094
# Poetry uses pip and setuptools (although they're not included as dependencies)
# We don't need to list wheel here, but setting a min vr can avoid generating inferior wheels
requires = ["poetry>=1.1,<2", "virtualenv==20.0.33", "wheel>=0.36,<1.0"]
build-backend = "poetry.masonry.api"


#########################################################################################
# Poetry metadata
#########################################################################################

[tool.poetry]
name = "mandos"
version = "0.2.0"
description = "Get the biological targets of compounds."
authors = ["Douglas Myers-Turnbull"]
maintainers = ["Douglas Myers-Turnbull"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["cheminformatics", "chembl", "pubchem", "drug-discovery"]
homepage = "https://github.com/dmyersturnbull/mandos"
repository = "https://github.com/dmyersturnbull/mandos"
documentation = "https://mandos-chem.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
	"Intended Audience :: Science/Research",
	"Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
	'Typing :: Typed'
]

[tool.poetry.urls]
CI = "https://github.com/dmyersturnbull/mandos/actions"
Issues = "https://github.com/dmyersturnbull/mandos/issues"
Download = "https://pypi.org/project/mandos/"


#########################################################################################
# Poetry build & dependencies
#########################################################################################

[tool.poetry.scripts]
mandos = "mandos.cli:cli"

[tool.poetry.dependencies]
python                         = "^3.10"
aioquic                        = {version=">=0.9, <1.0", optional=true}
chembl-webresource-client      = "^0.10"
click                          = ">=8"
decorateme                     = "^0.2.3"
defusedxml                     = ">=0.7, <1.0"
fastapi                        = {version=">=0.7, <1.0", optional=true}
hypercorn                      = {version=">=0.11, <1.0", optional=true}
itsdangerous                   = {version="^2", optional=true}
loguru                         = ">=0.5, <1.0"
numpy                          = "^1.21"
orjson                         = "^3.6"
pandas                         = "^1.3"
pint                           = ">=0.18, <1.0"
pocketutils                    = "^0.8.5"
pydantic                       = "^1.8"
regex                          = ">=2021.11"
requests                       = "^2.26"
suretime                       = ">=0.1.1, <1.0"
tomlkit                        = ">=0.7, <1.0"
typeddfs                       = {version=">=0.16.4, <1.0", extras=["feather", "parquet", "excel", "xml"]}
typer                          = ">=0.4, <1.0"
tzdata                         = ">=2021.5"
joblib                         = {version="^1.1", optional=true}
matplotlib                     = {version="^3.4", optional=true}
selenium                       = {version="^4", optional=true}
scikit-learn                   = {version="^1", optional=true}
seaborn                        = {version=">=0.11, <1.0", optional=true}
umap-learn                     = {version=">=0.5, <1.0", optional=true}

[tool.poetry.extras]
analysis = ["joblib", "scikit-learn", "umap-learn"]
server = ["aioquic", "fastapi", "hypercorn", "itsdangerous"]
viz = ["matplotlib", "seaborn"]
scrape = ["selenium"]
all = ["matplotlib", "scikit-learn", "seaborn", "selenium", "umap-learn"]

[tool.poetry.dev-dependencies]
pre-commit               = "^2.15"
pre-commit-hooks         = "^4"
bandit                   = "^1.7"
flake8                   = "^4"
flake8-bugbear           = ">=21.9.2"
flake8-docstrings        = "^1.6"
nbqa                     = "^1.1"
pytest                   = "^6"
coverage                 = {extras = ["toml"], version = "^6"}
pytest-cov               = "^3"
Sphinx                   = "^5.0"
sphinx-autoapi           = "^1.5"
sphinx-copybutton        = ">=0.4, <1.0"
sphinx-rtd-theme         = "^1"
sphinxcontrib-mermaid    = ">=0.7, <1.0"


#########################################################################################
# Tyrannosaurus
#########################################################################################

[tool.tyrannosaurus.options]
align = true
sort  = true

[tool.tyrannosaurus.sources]
metavm             = "'ubuntu-20.04'"
metavmbox          = "'ubuntu/focal64'"
pymetaversion      = "'3.9'"
pycompatversions   = "tool.poetry.dependencies"
pytoxversions      = "tool.poetry.dependencies"
status             = "'Development'"
date               = "'${today}'"
copyright          = "'Copyright 2020â€“2021'"
doc_license        = "'CC BY 4.0'"
doc_license_url    = "'https://creativecommons.org/licenses/by/4.0'"
version            = "tool.poetry.version"
release            = "tool.poetry.version"
devdeps            = "tool.poetry.dev-dependencies"
precommitvr        = "tool.poetry.dev-dependencies"
precommitconfigvr  = "tool.poetry.dev-dependencies"
linelength         = "tool.black.line-length"
authors = [
    "Douglas Myers-Turnbull <github:dmyersturnbull,orcid:0000-0003-3610-4808>",
]
maintainers = "tool.tyrannosaurus.sources.authors"

[tool.tyrannosuarus.paths]
recipe             = "'recipes/${name}/meta.yml'"
environment        = "'environment.yml'"

[tool.tyrannosaurus.targets]
pyproject    = true
init         = true
tox          = true
docs         = true
recipes      = true
environment  = true
license      = true
authors      = true
github       = true
travis       = true
dockerfile   = true
readme       = true
changelog    = true
citation     = true
codemeta     = true


#########################################################################################
# Testing
#########################################################################################

# This will be used in a future version of pytest:
#[tool.pytest]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(asctime)s [%(levelname)7s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y%m%d %H:%M:%S"

[tool.coverage.paths]
source = ["mandos"]

[tool.coverage.run]
source = ["mandos"]

[tool.coverage.report]
show_missing = true


#########################################################################################
# Style checking
#########################################################################################

[tool.nbqa.mutate]
black = 1

[tool.nbqa.addopts]
black = ["--extend-ignore=E203"]

[tool.black]
line-length = 100
target-version = ["py39"]

[mypy]
check_untyped_defs = true
strict_optional = true

[tool.pycodestyle]
max-line-length = 100
statistics = true

[tool.pydocstyle]
# 212 and 213 contradict; 203 and 204 contradict; D302 is not relevant in Py3
ignore = ["D203", "D212", "D302"]
